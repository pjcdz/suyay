name: Build and Deploy Suyay App

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_WEB: ${{ github.repository_owner }}/suyay_web
  REMOTE_DEPLOY_PATH: /home/deploy/suyay

jobs:
  # ----- JOB 1: Construir y Publicar la Imagen Docker -----
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Web image
        id: meta-web
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WEB }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Web image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta-web.outputs.tags }}
          labels: ${{ steps.meta-web.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ----- JOB 2: Desplegar en el Servidor (Gestionando Secretos + Git Sync) -----
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Update secrets and Deploy Stack via SSH (Advanced Strategy + Git Sync) # Updated step name
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          script: |
            # Salir inmediatamente si un comando falla
            set -e
            # Definir la ruta del stack file para usarla despu√©s (Opcional pero claro)
            STACK_FILE="${{ env.REMOTE_DEPLOY_PATH }}/docker-stack.yml"

            # --- Git Synchronization ---
            cd ${{ env.REMOTE_DEPLOY_PATH }} # Ir al directorio de despliegue

            echo "üì• Pulling and resetting Git repository..."
            git fetch origin                 # Obtener lo √∫ltimo del remoto
            git reset --hard origin/main     # Forzar el estado local al de origin/main
            git clean -fd                    # Limpiar archivos no rastreados
            echo "   Git repository synchronized."
            # --- End of Git Synchronization ---

            # --- Docker Secret Update Logic (Advanced Strategy) ---
            echo "üîÑ Creating temporary updated Docker secrets (_new)..."
            docker secret rm db_user_new || true
            # ... (resto de la creaci√≥n de secretos _new) ...
            echo "${{ secrets.DB_NAME }}" | docker secret create db_name_new -
            echo "   Secrets _new created."

            echo "üõ†Ô∏è Temporarily updating docker-stack.yml on server to use _new secrets..."
            # Modificar usando $STACK_FILE o directamente 'docker-stack.yml' ya que estamos en el dir correcto
            sed -i.bak 's|source: db_user|source: db_user_new|g' "$STACK_FILE"
            # ... (resto de los comandos sed) ...
            sed -i 's|MYSQL_DATABASE_FILE: /run/secrets/db_name|MYSQL_DATABASE_FILE: /run/secrets/db_name_new|g' "$STACK_FILE"
            echo "   docker-stack.yml modified to use _new secrets."

            echo "üöÄ Deploying Docker Stack with _new secrets..."
            # Desplegar usando $STACK_FILE o directamente 'docker-stack.yml'
            docker stack deploy --with-registry-auth -c "$STACK_FILE" suyay
            echo "   First deployment initiated."

            # ... (resto del script: rm old, create original, revert sed, final deploy, rm _new) ...

            echo "üßΩ Cleaning up temporary _new secrets..."
            docker secret rm db_user_new || true
            docker secret rm db_password_new || true
            docker secret rm db_name_new || true
            echo "   Temporary secrets removed."

            echo "üéâ Git repo synced, secrets updated, and stack redeployed successfully!"